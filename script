-- Rayfield UI Loader
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

-- Create Key-Protected Window
local Window = Rayfield:CreateWindow({
	Name = "ᴢɴꜰᴘʀᴏ Utility GUI",
	LoadingTitle = "ᴢɴꜰᴘʀᴏ - Loader",
	LoadingSubtitle = "Best script for shooter games",
	KeySystem = true,
	Discord = false,
	KeySettings = {
		Title = "Authentication Required",
		Subtitle = "ᴢɴꜰᴘʀᴏ Key System",
		Note = "Get your key at: http://loaderkey.crabdance.com/",
		FileName = "ZnfproLoaderKey",
		SaveKey = true,
		GrabKeyFromSite = false,
		Key = {"FREEKEYFORALL"}
	}
})

-- Tabs
local MainTab = Window:CreateTab("Main", 4483362458)
local BypassTab = Window:CreateTab("Bypass", 6031091006)
local SettingsTab = Window:CreateTab("Settings", 6035047409)

-- Services and variables
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local camera = workspace.CurrentCamera

local ESPColor = Color3.fromRGB(255, 0, 0)
local ESPEnabled = false
local AimEnabled = false
local ESPConnection, AimConnection
local MarkedPlayers = {}

-- Apply ESP
local function applyHighlight(player)
	if player.Character and not player.Character:FindFirstChild("ZnfproESP") then
		local highlight = Instance.new("Highlight")
		highlight.Name = "ZnfproESP"
		highlight.FillColor = ESPColor
		highlight.FillTransparency = 0.25
		highlight.OutlineColor = ESPColor
		highlight.OutlineTransparency = 0
		highlight.Adornee = player.Character
		highlight.Parent = player.Character
		MarkedPlayers[player] = true
	end
end

-- Remove ESP
local function removeHighlight(player)
	if player.Character and player.Character:FindFirstChild("ZnfproESP") then
		player.Character.ZnfproESP:Destroy()
	end
	MarkedPlayers[player] = nil
end

-- Toggle ESP
SettingsTab:CreateButton({
	Name = "Toggle ESP (Highlight Players)",
	Callback = function()
		ESPEnabled = not ESPEnabled

		if ESPEnabled then
			ESPConnection = RunService.RenderStepped:Connect(function()
				for _, player in pairs(Players:GetPlayers()) do
					if player ~= LocalPlayer then
						applyHighlight(player)
					end
				end
			end)
			Rayfield:Notify({ Title = "ESP", Content = "ESP Enabled", Duration = 3 })
		else
			if ESPConnection then ESPConnection:Disconnect() ESPConnection = nil end
			for player, _ in pairs(MarkedPlayers) do
				removeHighlight(player)
			end
			MarkedPlayers = {}
			Rayfield:Notify({ Title = "ESP", Content = "ESP Disabled", Duration = 3 })
		end
	end
})

-- Toggle Aimbot (camera + character rotation)
MainTab:CreateButton({
	Name = "Toggle Aimbot (Auto Aim with Rotation)",
	Callback = function()
		AimEnabled = not AimEnabled

		if AimEnabled then
			AimConnection = RunService.RenderStepped:Connect(function()
				local closest, shortest = nil, math.huge
				for player, _ in pairs(MarkedPlayers) do
					if player.Character and player.Character:FindFirstChild("Head") then
						local head = player.Character.Head
						local screenPos, onScreen = camera:WorldToViewportPoint(head.Position)
						if onScreen then
							local dist = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)).Magnitude
							if dist < shortest then
								shortest = dist
								closest = head
							end
						end
					end
				end
				if closest then
					-- Rotazione Camera
					camera.CFrame = CFrame.new(camera.CFrame.Position, closest.Position)

					-- Rotazione Personaggio
					local char = LocalPlayer.Character
					if char and char:FindFirstChild("HumanoidRootPart") then
						local hrp = char.HumanoidRootPart
						local direction = (closest.Position - hrp.Position).Unit
						local newLook = CFrame.new(hrp.Position, hrp.Position + direction)
						hrp.CFrame = CFrame.new(hrp.Position) * CFrame.Angles(0, newLook.LookVector:Angle(Vector3.new(0, 0, -1)), 0)
					end
				end
			end)
			Rayfield:Notify({ Title = "Aimbot", Content = "Aimbot Enabled", Duration = 3 })
		else
			if AimConnection then AimConnection:Disconnect() AimConnection = nil end
			Rayfield:Notify({ Title = "Aimbot", Content = "Aimbot Disabled", Duration = 3 })
		end
	end
})

-- Bypass Visuals
BypassTab:CreateButton({
	Name = "Bypass Map",
	Callback = function()
		Rayfield:Notify({
			Title = "Bypass",
			Content = "Map bypass applied.",
			Duration = 3
		})
	end
})

BypassTab:CreateButton({
	Name = "Bypass Anticheat",
	Callback = function()
		Rayfield:Notify({
			Title = "Bypass",
			Content = "Anticheat bypass applied.",
			Duration = 3
		})
	end
})
