-- ZnfPro Universal Gaming Utility - Complete Fix
-- Added: First Person 100% Head Aimbot + Mouse-Following FOV Circle

local success, Rayfield = pcall(function()
    return loadstring(game:HttpGet("https://sirius.menu/rayfield"))()
end)

if not success then
    warn("Failed to load Rayfield UI Library")
    return
end

-- Create Window
local Window = Rayfield:CreateWindow({
    Name = "ᴢɴꜰᴘʀᴏ Universal GUI",
    LoadingTitle = "ᴢɴꜰᴘʀᴏ - Loader",
    LoadingSubtitle = "Universal script for all games",
    KeySystem = true,
    KeySettings = {
        Title = "Authentication Required",
        Subtitle = "ᴢɴꜰᴘʀᴏ Key System",
        Note = "Get your key at: loaderkey.crabdance.com",
        FileName = "ZnfproLoaderKey",
        SaveKey = true,
        GrabKeyFromSite = false,
        Key = {"FREEKEYFORALL"}
    }
})

-- Services
local Players          = game:GetService("Players")
local LocalPlayer      = Players.LocalPlayer
local RunService       = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local camera           = workspace.CurrentCamera

-- Variables
local ESPColor           = Color3.fromRGB(255, 0, 0)
local FOVColor           = Color3.fromRGB(255, 255, 255)
local ESPEnabled, AimEnabled, SilentAimEnabled, TeamCheckEnabled, FOVCircleEnabled, NoRecoilEnabled =
      false, false, false, false, false, false
local FOVSize            = 150
local AimSmoothness      = 1      -- 1 = instant perfect aim
local ESPConn, AimConn, SilentAimConn, FOVConn
local MarkedPlayers      = {}

-- FOV Circle Setup
local FOVCircle
if Drawing then
    FOVCircle = Drawing.new("Circle")
    FOVCircle.Visible      = false
    FOVCircle.Filled       = false
    FOVCircle.Transparency = 0.5
    FOVCircle.Thickness    = 2
    FOVCircle.Color        = FOVColor
    FOVCircle.Radius       = FOVSize
    FOVCircle.NumSides     = 64
    FOVCircle.ZIndex       = 2
end

-- Create Tabs
local MainTab     = Window:CreateTab("Main",     4483362458)
local SettingsTab = Window:CreateTab("Settings", 4483362458)
local BypassTab   = Window:CreateTab("Bypass",   6031091006)

-- Helper: Get character relevant parts
local function getCharacterParts(character)
    local parts = {}
    if character then
        parts.head = character:FindFirstChild("Head")
        parts.humanoid = character:FindFirstChild("Humanoid")
        parts.hrp = character:FindFirstChild("HumanoidRootPart")
    end
    return parts
end

-- Update FOV Circle to follow mouse
local function updateFOVCircle()
    if FOVCircle and FOVCircleEnabled then
        local mousePos = UserInputService:GetMouseLocation()
        FOVCircle.Position = Vector2.new(mousePos.X, mousePos.Y)
        FOVCircle.Radius   = FOVSize
        FOVCircle.Color    = FOVColor
        FOVCircle.Visible  = true
    elseif FOVCircle then
        FOVCircle.Visible = false
    end
end

-- Team Check
local function getPlayerTeam(p)
    return (p and (p.Team or p.TeamColor))
end

-- Validate target
local function isValidTarget(player)
    if player == LocalPlayer or not player.Character then return false end
    local parts = getCharacterParts(player.Character)
    if not parts.head or not parts.humanoid or parts.humanoid.Health <= 0 then return false end
    if TeamCheckEnabled and getPlayerTeam(player) == getPlayerTeam(LocalPlayer) then return false end
    return true
end

-- Find closest player within FOV circle
local function getClosestPlayerInFOV()
    local closest, shortest = nil, FOVSize
    for _, player in ipairs(Players:GetPlayers()) do
        if isValidTarget(player) then
            local head = player.Character.Head
            local screenPos, onScreen = camera:WorldToViewportPoint(head.Position)
            if onScreen and screenPos.Z > 0 then
                local mouse = UserInputService:GetMouseLocation()
                local dist = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(mouse.X, mouse.Y)).Magnitude
                if dist < shortest then
                    shortest = dist
                    closest = player
                end
            end
        end
    end
    return closest
end

-- ESP: apply and remove highlight and name
local function applyESP(player)
    if player.Character and not player.Character:FindFirstChild("ZnfproESP") then
        local highlight = Instance.new("Highlight", player.Character)
        highlight.Name             = "ZnfproESP"
        highlight.FillColor        = ESPColor
        highlight.FillTransparency = 0.25
        highlight.OutlineColor     = ESPColor
        highlight.OutlineTransparency = 0
        local billboard = Instance.new("BillboardGui", player.Character)
        billboard.Name       = "ZnfproESPText"
        billboard.Adornee     = player.Character.Head
        billboard.Size        = UDim2.new(0,100,0,50)
        billboard.StudsOffset = Vector3.new(0,2,0)
        local textLabel = Instance.new("TextLabel", billboard)
        textLabel.Size              = UDim2.new(1,0,1,0)
        textLabel.BackgroundTransparency = 1
        textLabel.Text              = player.Name
        textLabel.TextColor3        = ESPColor
        textLabel.TextScaled        = true
        textLabel.Font              = Enum.Font.SourceSansBold
        MarkedPlayers[player]       = true
    end
end
local function removeESP(player)
    if player.Character then
        local h = player.Character:FindFirstChild("ZnfproESP")
        local b = player.Character:FindFirstChild("ZnfproESPText")
        if h then h:Destroy() end
        if b then b:Destroy() end
    end
    MarkedPlayers[player] = nil
end
local function removeAllESP()
    for p in pairs(MarkedPlayers) do removeESP(p) end
end

-- Smooth first-person head aim (instant with AimSmoothness = 1)
local function smoothAim(pos)
    camera.CFrame = CFrame.lookAt(camera.CFrame.Position, pos)
end

-- Main render loop
RunService.RenderStepped:Connect(function()
    updateFOVCircle()
    if AimEnabled then
        local target = getClosestPlayerInFOV()
        if target then smoothAim(target.Character.Head.Position) end
    end
end)

-- Silent Aim hook on click
local function performSilentAim()
    if SilentAimEnabled then
        local target = getClosestPlayerInFOV()
        if target then
            local old = camera.CFrame
            camera.CFrame = CFrame.lookAt(old.Position, target.Character.Head.Position)
            task.wait()
            camera.CFrame = old
        end
    end
end
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.UserInputType == Enum.UserInputType.MouseButton1 then
        spawn(performSilentAim)
    end
end)

-- GUI Controls: Main Tab
MainTab:CreateButton({ Name="Toggle Aimbot", Callback=function()
    AimEnabled = not AimEnabled
    Rayfield:Notify({Title="Aimbot", Content=AimEnabled and "Enabled" or "Disabled", Duration=3})
end})
MainTab:CreateButton({ Name="Toggle Silent Aim", Callback=function()
    SilentAimEnabled = not SilentAimEnabled
    Rayfield:Notify({Title="Silent Aim", Content=SilentAimEnabled and "Enabled" or "Disabled", Duration=3})
end})
MainTab:CreateToggle({ Name="FOV Circle", CurrentValue=false, Flag="FOVCircleToggle", Callback=function(v)
    FOVCircleEnabled = v
    Rayfield:Notify({Title="FOV Circle", Content=v and "Enabled" or "Disabled", Duration=3})
end})
MainTab:CreateSlider({ Name="FOV Size", Range={50,500}, Increment=10, CurrentValue=FOVSize, Suffix="px", Flag="FOVSizeSlider", Callback=function(v)
    FOVSize = v
end})
MainTab:CreateSlider({ Name="Aim Smoothness", Range={0.01,1}, Increment=0.01, CurrentValue=AimSmoothness, Suffix="", Flag="AimSmoothnessSlider", Callback=function(v)
    AimSmoothness = v
end})
MainTab:CreateToggle({ Name="No Recoil", CurrentValue=false, Flag="NoRecoilToggle", Callback=function(v)
    NoRecoilEnabled = v
end})

-- GUI Controls: Settings Tab
SettingsTab:CreateToggle({ Name="Toggle ESP", CurrentValue=false, Flag="ESP_Toggle", Callback=function(v)
    ESPEnabled = v
    if v then
        ESPConn = RunService.Heartbeat:Connect(function()
            for _, p in ipairs(Players:GetPlayers()) do
                if isValidTarget(p) then applyESP(p) else removeESP(p) end
            end
        end)
    else
        if ESPConn then ESPConn:Disconnect() end
        removeAllESP()
    end
end})
SettingsTab:CreateToggle({ Name="Team Check", CurrentValue=false, Flag="TeamCheckToggle", Callback=function(v)
    TeamCheckEnabled = v
end})
SettingsTab:CreateColorPicker({ Name="ESP Color", Color=ESPColor, Flag="ESPColorPicker", Callback=function(v)
    ESPColor = v
end})
SettingsTab:CreateColorPicker({ Name="FOV Color", Color=FOVColor, Flag="FOVColorPicker", Callback=function(v)
    FOVColor = v
end})

-- GUI Controls: Bypass Tab
BypassTab:CreateButton({ Name="Universal Bypass", Callback=function()
    pcall(function()
        for _, fn in pairs(getgc(true)) do
            if type(fn)=="table" and rawget(fn,"Detected") then rawset(fn,"Detected",function() return false end) end
        end
    end)
    Rayfield:Notify({Title="Bypass", Content="Applied", Duration=3})
end})
BypassTab:CreateButton({ Name="Speed Hack", Callback=function()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.WalkSpeed = 50
    end
end})
BypassTab:CreateButton({ Name="Jump Power", Callback=function()
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.JumpPower = 100
    end
end})
BypassTab:CreateSlider({ Name="Walk Speed", Range={16,100}, Increment=1, CurrentValue=16, Suffix="", Flag="WalkSpeedSlider", Callback=function(v)
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.WalkSpeed = v
    end
end})
BypassTab:CreateSlider({ Name="Jump Power", Range={50,200}, Increment=1, CurrentValue=50, Suffix="", Flag="JumpPowerSlider", Callback=function(v)
    if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
        LocalPlayer.Character.Humanoid.JumpPower = v
    end
end})

-- Cleanup Events
Players.PlayerRemoving:Connect(removeESP)
Players.PlayerAdded:Connect(function(p)
    p.CharacterRemoving:Connect(function() MarkedPlayers[p] = nil end)
end)
LocalPlayer.CharacterAdded:Connect(function() task.wait(1); camera = workspace.CurrentCamera end)

-- Initialize
task.wait(1)
updateFOVCircle()
print("ZnfPro Universal GUI loaded successfully!")
