-- Rayfield UI Loader
local Rayfield = loadstring(game:HttpGet("https://sirius.menu/rayfield"))()

-- Key-protected window
local Window = Rayfield:CreateWindow({
	Name = "ᴢɴꜰᴘʀᴏ Utility GUI",
	LoadingTitle = "ᴢɴꜰᴘʀᴏ - Loader",
	LoadingSubtitle = "Access requires valid key",
	KeySystem = true,
	Discord = false,
	KeySettings = {
		Title = "Authentication Required",
		Subtitle = "ᴢɴꜰᴘʀᴏ Key System",
		Note = "Get your key at: http://loaderkey.crabdance.com/",
		FileName = "ZnfproLoaderKey",
		SaveKey = true,
		GrabKeyFromSite = false,
		Key = {"FREEKEYFORALL"}
	}
})

-- Tabs
local MainTab = Window:CreateTab("Main", 4483362458)
local BypassTab = Window:CreateTab("Bypass", 4483362458)
local SettingsTab = Window:CreateTab("Settings", 4483362458)

-- Global variables
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local camera = workspace.CurrentCamera
local ESPColor = Color3.fromRGB(255, 0, 0)
local ESPEnabled = false
local AimEnabled = false

-- Function to apply ESP color
local function applyESP(player)
	if player.Character then
		for _, part in ipairs(player.Character:GetDescendants()) do
			if part:IsA("BasePart") and part.Name ~= "HumanoidRootPart" then
				part.Color = ESPColor
				part.Material = Enum.Material.Neon
			end
		end
	end
end

-- Spinner for ESP color
SettingsTab:CreateDropdown({
	Name = "ESP Color",
	Options = {"Red", "Green", "Blue", "Yellow", "Purple"},
	CurrentOption = "Red",
	Callback = function(Option)
		local colors = {
			Red = Color3.fromRGB(255, 0, 0),
			Green = Color3.fromRGB(0, 255, 0),
			Blue = Color3.fromRGB(0, 140, 255),
			Yellow = Color3.fromRGB(255, 255, 0),
			Purple = Color3.fromRGB(140, 0, 255)
		}
		ESPColor = colors[Option]
	end
})

-- Button to enable ESP
SettingsTab:CreateButton({
	Name = "Enable ESP (Color Players)",
	Callback = function()
		ESPEnabled = true
		RunService.RenderStepped:Connect(function()
			if not ESPEnabled then return end
			for _, player in pairs(Players:GetPlayers()) do
				if player ~= LocalPlayer and player.Character then
					applyESP(player)
				end
			end
		end)
		Rayfield:Notify({
			Title = "ESP",
			Content = "ESP is now active.",
			Duration = 3
		})
	end
})

-- AIMBOT
MainTab:CreateButton({
	Name = "Enable Aim",
	Callback = function()
		AimEnabled = true
		local function getClosestPlayer()
			local closest = nil
			local shortestDistance = math.huge

			for _, player in pairs(Players:GetPlayers()) do
				if player ~= LocalPlayer and player.Character and player.Character:FindFirstChild("Head") then
					local head = player.Character.Head
					if head.Color == ESPColor then -- only targets colored players
						local screenPos, onScreen = camera:WorldToViewportPoint(head.Position)
						if onScreen then
							local distance = (Vector2.new(screenPos.X, screenPos.Y) - Vector2.new(camera.ViewportSize.X/2, camera.ViewportSize.Y/2)).Magnitude
							if distance < shortestDistance then
								shortestDistance = distance
								closest = head
							end
						end
					end
				end
			end
			return closest
		end

		RunService.RenderStepped:Connect(function()
			if AimEnabled then
				local target = getClosestPlayer()
				if target then
					camera.CFrame = CFrame.new(camera.CFrame.Position, target.Position)
				end
			end
		end)

		Rayfield:Notify({
			Title = "Aimbot",
			Content = "Aim is now active.",
			Duration = 3
		})
	end
})

-- Fake bypass tab for appearance
BypassTab:CreateButton({
	Name = "Bypass Map",
	Callback = function()
		Rayfield:Notify({
			Title = "Bypass",
			Content = "Map bypass applied.",
			Duration = 3
		})
	end
})

BypassTab:CreateButton({
	Name = "Bypass Anticheat",
	Callback = function()
		Rayfield:Notify({
			Title = "Bypass",
			Content = "Anticheat bypass applied.",
			Duration = 3
		})
	end
})
